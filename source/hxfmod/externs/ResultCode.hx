package hxfmod.externs;

extern enum abstract ResultCode(FMOD_RESULT_Impl)
{
	@:native('FMOD_OK')
	var FMOD_OK;

	@:native('FMOD_ERR_BADCOMMAND')
	var FMOD_ERR_BADCOMMAND;

	@:native('FMOD_ERR_CHANNEL_ALLOC')
	var FMOD_ERR_CHANNEL_ALLOC;

	@:native('FMOD_ERR_CHANNEL_STOLEN')
	var FMOD_ERR_CHANNEL_STOLEN;

	@:native('FMOD_ERR_DMA')
	var FMOD_ERR_DMA;

	@:native('FMOD_ERR_DSP_CONNECTION')
	var FMOD_ERR_DSP_CONNECTION;

	@:native('FMOD_ERR_DSP_DONTPROCESS')
	var FMOD_ERR_DSP_DONTPROCESS;

	@:native('FMOD_ERR_DSP_FORMAT')
	var FMOD_ERR_DSP_FORMAT;

	@:native('FMOD_ERR_DSP_INUSE')
	var FMOD_ERR_DSP_INUSE;

	@:native('FMOD_ERR_DSP_NOTFOUND')
	var FMOD_ERR_DSP_NOTFOUND;

	@:native('FMOD_ERR_DSP_RESERVED')
	var FMOD_ERR_DSP_RESERVED;

	@:native('FMOD_ERR_DSP_SILENCE')
	var FMOD_ERR_DSP_SILENCE;

	@:native('FMOD_ERR_DSP_TYPE')
	var FMOD_ERR_DSP_TYPE;

	@:native('FMOD_ERR_FILE_BAD')
	var FMOD_ERR_FILE_BAD;

	@:native('FMOD_ERR_FILE_COULDNOTSEEK')
	var FMOD_ERR_FILE_COULDNOTSEEK;

	@:native('FMOD_ERR_FILE_DISKEJECTED')
	var FMOD_ERR_FILE_DISKEJECTED;

	@:native('FMOD_ERR_FILE_EOF')
	var FMOD_ERR_FILE_EOF;

	@:native('FMOD_ERR_FILE_ENDOFDATA')
	var FMOD_ERR_FILE_ENDOFDATA;

	@:native('FMOD_ERR_FILE_NOTFOUND')
	var FMOD_ERR_FILE_NOTFOUND;

	@:native('FMOD_ERR_FORMAT')
	var FMOD_ERR_FORMAT;

	@:native('FMOD_ERR_HEADER_MISMATCH')
	var FMOD_ERR_HEADER_MISMATCH;

	@:native('FMOD_ERR_HTTP')
	var FMOD_ERR_HTTP;

	@:native('FMOD_ERR_HTTP_ACCESS')
	var FMOD_ERR_HTTP_ACCESS;

	@:native('FMOD_ERR_HTTP_PROXY_AUTH')
	var FMOD_ERR_HTTP_PROXY_AUTH;

	@:native('FMOD_ERR_HTTP_SERVER_ERROR')
	var FMOD_ERR_HTTP_SERVER_ERROR;

	@:native('FMOD_ERR_HTTP_TIMEOUT')
	var FMOD_ERR_HTTP_TIMEOUT;

	@:native('FMOD_ERR_INITIALIZATION')
	var FMOD_ERR_INITIALIZATION;

	@:native('FMOD_ERR_INITIALIZED')
	var FMOD_ERR_INITIALIZED;

	@:native('FMOD_ERR_INTERNAL')
	var FMOD_ERR_INTERNAL;

	@:native('FMOD_ERR_INVALID_FLOAT')
	var FMOD_ERR_INVALID_FLOAT;

	@:native('FMOD_ERR_INVALID_HANDLE')
	var FMOD_ERR_INVALID_HANDLE;

	@:native('FMOD_ERR_INVALID_PARAM')
	var FMOD_ERR_INVALID_PARAM;

	@:native('FMOD_ERR_INVALID_POSITION')
	var FMOD_ERR_INVALID_POSITION;

	@:native('FMOD_ERR_INVALID_SPEAKER')
	var FMOD_ERR_INVALID_SPEAKER;

	@:native('FMOD_ERR_INVALID_SYNCPOINT')
	var FMOD_ERR_INVALID_SYNCPOINT;

	@:native('FMOD_ERR_INVALID_THREAD')
	var FMOD_ERR_INVALID_THREAD;

	@:native('FMOD_ERR_INVALID_VECTOR')
	var FMOD_ERR_INVALID_VECTOR;

	@:native('FMOD_ERR_MAXAUDIBLE')
	var FMOD_ERR_MAXAUDIBLE;

	@:native('FMOD_ERR_MEMORY')
	var FMOD_ERR_MEMORY;

	@:native('FMOD_ERR_MEMORY_CANTPOINT')
	var FMOD_ERR_MEMORY_CANTPOINT;

	@:native('FMOD_ERR_NEEDS3D')
	var FMOD_ERR_NEEDS3D;

	@:native('FMOD_ERR_NEEDSHARDWARE')
	var FMOD_ERR_NEEDSHARDWARE;

	@:native('FMOD_ERR_NET_CONNECT')
	var FMOD_ERR_NET_CONNECT;

	@:native('FMOD_ERR_NET_SOCKET_ERROR')
	var FMOD_ERR_NET_SOCKET_ERROR;

	@:native('FMOD_ERR_NET_URL')
	var FMOD_ERR_NET_URL;

	@:native('FMOD_ERR_NET_WOULD_BLOCK')
	var FMOD_ERR_NET_WOULD_BLOCK;

	@:native('FMOD_ERR_NOTREADY')
	var FMOD_ERR_NOTREADY;

	@:native('FMOD_ERR_OUTPUT_ALLOCATED')
	var FMOD_ERR_OUTPUT_ALLOCATED;

	@:native('FMOD_ERR_OUTPUT_CREATEBUFFER')
	var FMOD_ERR_OUTPUT_CREATEBUFFER;

	@:native('FMOD_ERR_OUTPUT_DRIVERCALL')
	var FMOD_ERR_OUTPUT_DRIVERCALL;

	@:native('FMOD_ERR_OUTPUT_FORMAT')
	var FMOD_ERR_OUTPUT_FORMAT;

	@:native('FMOD_ERR_OUTPUT_INIT')
	var FMOD_ERR_OUTPUT_INIT;

	@:native('FMOD_ERR_OUTPUT_NODRIVERS')
	var FMOD_ERR_OUTPUT_NODRIVERS;

	@:native('FMOD_ERR_PLUGIN')
	var FMOD_ERR_PLUGIN;

	@:native('FMOD_ERR_PLUGIN_MISSING')
	var FMOD_ERR_PLUGIN_MISSING;

	@:native('FMOD_ERR_PLUGIN_RESOURCE')
	var FMOD_ERR_PLUGIN_RESOURCE;

	@:native('FMOD_ERR_PLUGIN_VERSION')
	var FMOD_ERR_PLUGIN_VERSION;

	@:native('FMOD_ERR_RECORD')
	var FMOD_ERR_RECORD;

	@:native('FMOD_ERR_REVERB_CHANNELGROUP')
	var FMOD_ERR_REVERB_CHANNELGROUP;

	@:native('FMOD_ERR_REVERB_INSTANCE')
	var FMOD_ERR_REVERB_INSTANCE;

	@:native('FMOD_ERR_SUBSOUNDS')
	var FMOD_ERR_SUBSOUNDS;

	@:native('FMOD_ERR_SUBSOUND_ALLOCATED')
	var FMOD_ERR_SUBSOUND_ALLOCATED;

	@:native('FMOD_ERR_SUBSOUND_CANTMOVE')
	var FMOD_ERR_SUBSOUND_CANTMOVE;

	@:native('FMOD_ERR_TAGNOTFOUND')
	var FMOD_ERR_TAGNOTFOUND;

	@:native('FMOD_ERR_TOOMANYCHANNELS')
	var FMOD_ERR_TOOMANYCHANNELS;

	@:native('FMOD_ERR_TRUNCATED')
	var FMOD_ERR_TRUNCATED;

	@:native('FMOD_ERR_UNIMPLEMENTED')
	var FMOD_ERR_UNIMPLEMENTED;

	@:native('FMOD_ERR_UNINITIALIZED')
	var FMOD_ERR_UNINITIALIZED;

	@:native('FMOD_ERR_UNSUPPORTED')
	var FMOD_ERR_UNSUPPORTED;

	@:native('FMOD_ERR_VERSION')
	var FMOD_ERR_VERSION;

	@:native('FMOD_ERR_EVENT_ALREADY_LOADED')
	var FMOD_ERR_EVENT_ALREADY_LOADED;

	@:native('FMOD_ERR_EVENT_LIVEUPDATE_BUSY')
	var FMOD_ERR_EVENT_LIVEUPDATE_BUSY;

	@:native('FMOD_ERR_EVENT_LIVEUPDATE_MISMATCH')
	var FMOD_ERR_EVENT_LIVEUPDATE_MISMATCH;

	@:native('FMOD_ERR_EVENT_LIVEUPDATE_TIMEOUT')
	var FMOD_ERR_EVENT_LIVEUPDATE_TIMEOUT;

	@:native('FMOD_ERR_EVENT_NOTFOUND')
	var FMOD_ERR_EVENT_NOTFOUND;

	@:native('FMOD_ERR_STUDIO_UNINITIALIZED')
	var FMOD_ERR_STUDIO_UNINITIALIZED;

	@:native('FMOD_ERR_STUDIO_NOT_LOADED')
	var FMOD_ERR_STUDIO_NOT_LOADED;

	@:native('FMOD_ERR_INVALID_STRING')
	var FMOD_ERR_INVALID_STRING;

	@:native('FMOD_ERR_ALREADY_LOCKED')
	var FMOD_ERR_ALREADY_LOCKED;

	@:native('FMOD_ERR_NOT_LOCKED')
	var FMOD_ERR_NOT_LOCKED;

	@:native('FMOD_ERR_RECORD_DISCONNECTED')
	var FMOD_ERR_RECORD_DISCONNECTED;

	@:native('FMOD_ERR_TOOMANYSAMPLES')
	var FMOD_ERR_TOOMANYSAMPLES;

	@:native('FMOD_RESULT_FORCEINT')
	var FMOD_RESULT_FORCEINT;

	@:from
	static public inline function fromInt(i:Int):ResultCode
		return cast i;

	@:to
	extern public inline function toInt():Int
		return untyped this;

	public inline function toString():String
		return Types.FMod_Errors.ErrorString(untyped this);
}

@:build(hxfmod.macros.LinkerMacro.build('fmod_common.h', 'FMOD_RESULT', false))
private extern class FMOD_RESULT_Impl
{
}
